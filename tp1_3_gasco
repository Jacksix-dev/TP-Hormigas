
import random
from termcolor import colored

# Variables globales de configuración para la grilla y la simulación.
comida = 0                 # Cantidad de comida a colocar 
tamaño_grilla = 30       # Dimensión de la grilla (por ejemplo, 30 x 30)
obstaculos = 10            # Número de obstáculos a colocar en la grilla
hormigas = 5          # Número de hormigas a colocar en la grilla

# Variable global para almacenar los resultados del área recorrida por cada simulación.

area_recorrida=[]

# Diccionario que asocia cada estado de celda a un color.

estado_a_color = {
    0: 'red', #Hormigas
    1: 'green',#celda libre
    2: 'black',#obstaculo
    3: 'white',#comida
    4: 'yellow',}#celda recorrida
               



def matrix (size,hormigas,obstaculos,comida):
    """
    Crea la grilla inicial.
    
    - Se genera una grilla de tamaño `n` x `n` con celdas inicializadas en 1 (vacías).
    """
    grilla =[]
    
    for i in range(0,size):
        grilla.append([])
        for y in range(0,size):
            grilla[i].append(1)
    
    # Llama a edit_grilla para insertar los elementos en la grilla.
    edit_grilla(grilla,hormigas,obstaculos,comida)
    



def edit_grilla (grilla,hormigas,obstaculos,comida):
    """
    Configura la grilla inicial colocando hormigas, obstáculos y comida.
    
    - Las hormigas se colocan en posiciones aleatorias y se guarda su posición inicial.
    - Se colocan obstáculos y comida en celdas vacías (valor 1) == verde.
    
    Luego, se ejecutan 200 iteraciones de movimiento de hormigas y se pasa la grilla
    resultante a la función contador_de_area para medir el área recorrida.
    """
    comidalocal = comida
    posiciones_iniciales=[]
    
    while hormigas > 0:
        x = random.randint(0,len(grilla)-1)
        y = random.randint(0,len(grilla)-1)
        
        grilla[x][y] = 0
        hormigas -= 1
        posiciones_iniciales.append([x,y])

    while obstaculos > 0:
        x = random.randint(0,len(grilla)-1)
        y = random.randint(0,len(grilla)-1)
        
        if grilla[x][y] == 1:
            grilla[x][y] = 2
            obstaculos -= 1
    while comidalocal > 0:
        x = random.randint(0,len(grilla)-1)
        y = random.randint(0,len(grilla)-1)
        
        if grilla[x][y] == 1:
            grilla[x][y] = 3
            comidalocal -= 1
    
    
    counter = 0
    ultima_grilla = []
    while counter < 200:     # Se realizan 200 iteraciones de movimiento de hormigas.
        nuevas_posiciones,grilla = movedor_de_hormigas(grilla, posiciones_iniciales)
        posiciones_iniciales = nuevas_posiciones
        ultima_grilla = grilla 
        counter += 1
        

    
    
    contador_de_area(ultima_grilla)
    

    
       
    
def movedor_de_hormigas(grilla, posiciones_iniciales):
    """
    Mueve cada hormiga una vez (o intenta hasta max_reintentos) a una dirección aleatoria.
    
    
    Retorna una tupla con:
      - Las nuevas posiciones de las hormigas.
      - La grilla actualizada.
    """
    posiciones_finales= []
    
    
    for posicion in posiciones_iniciales:
       

        movimiento_exitoso = False
        reintentos = 0
        max_reintentos = 10

        # Intentamos hasta 10 veces hallar un movimiento válido
        while not movimiento_exitoso and reintentos < max_reintentos:
            reintentos += 1
            valor_aleatorio = random.choice(["x", "y"])

            if valor_aleatorio == "x":
                direccion = random.choice(["arriba", "abajo"])
                if direccion == "abajo":
                    if (posicion[0] + 1 < len(grilla) 
                        and grilla[posicion[0] + 1][posicion[1]] != 2):

                        grilla[posicion[0]][posicion[1]] = 4
                        posicion = (posicion[0] + 1, posicion[1])

                        
                        grilla[posicion[0]][posicion[1]] = 0
                        movimiento_exitoso = True
                        posiciones_finales.append(posicion)
                        

                elif direccion == "arriba":
                    if (posicion[0] - 1 >= 0 
                        and grilla[posicion[0] - 1][posicion[1]] != 2):
                        grilla[posicion[0]][posicion[1]] = 4
                        posicion = (posicion[0] - 1, posicion[1])

                        
                        grilla[posicion[0]][posicion[1]] = 0
                        movimiento_exitoso = True
                        posiciones_finales.append(posicion)
            else:  # valor_aleatorio == "y"
                direccion = random.choice(["derecha", "izquierda"])
                if direccion == "derecha":
                    if (posicion[1] + 1 < len(grilla[0]) 
                        and grilla[posicion[0]][posicion[1] + 1] != 2):
                        grilla[posicion[0]][posicion[1]] = 4
                        posicion = (posicion[0], posicion[1] + 1)
                        
                        grilla[posicion[0]][posicion[1]] = 0
                        movimiento_exitoso = True
                        posiciones_finales.append(posicion)
                elif direccion == "izquierda":
                    if (posicion[1] - 1 >= 0 
                        and grilla[posicion[0]][posicion[1] - 1] != 2):
                        grilla[posicion[0]][posicion[1]] = 4
                        posicion = (posicion[0], posicion[1] - 1)

        
                        grilla[posicion[0]][posicion[1]] = 0
                        movimiento_exitoso = True
                        posiciones_finales.append(posicion)
    
    
    
    return posiciones_finales,grilla
    

def contador_de_area(grilla_final):
    """
    Calcula el área recorrida en la grilla final contando la cantidad de celdas marcadas con 4 
    (amarillo) y agrega ese valor a la lista global 'area_recorrida'.
    
    """
    area = 0
    for fila in grilla_final:
        area +=fila.count(4) #Cuenta las casillas recorridas por las hormigas.
    area_recorrida.append(area) 
        

def simulador (simulaciones):
    """
    Ejecuta la cantidad de simulaciones especificadas.
    
    Para cada simulación:
      - Se genera la grilla y se inicializan los elementos (hormigas, obstáculos, comida).
      - Se realizan 200 iteraciones de movimiento de hormigas.
      - Se calcula el área recorrida (número de celdas marcadas como 4) y se almacena en 'area_recorrida'.
    
    Finalmente, se calcula y muestra el área recorrida promedio.
    """
    area_total_recorrida = 0

    for i in range(simulaciones):
        
        matrix(tamaño_grilla,hormigas,obstaculos,comida)

    for value in area_recorrida:
        area_total_recorrida += value

    area_promedio = area_total_recorrida / len(area_recorrida)

    print(f"Area recorrida promedio: {area_promedio} celdas")


simulador(10000)