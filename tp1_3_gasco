from termcolor import colored
import random
from termcolor import colored, cprint

#Variables Globales para editar la grilla.
comida = 0
tamaño_grilla = 30
obstaculos = 10
hormigas = 5


#Variables Globales para calcular el area.

area_recorrida=[]


estado_a_color = {
    0: 'red', #Hormigas
    1: 'green',#celda libre
    2: 'black',#obstaculo
    3: 'white',#comida
    4: 'yellow',}#celda recorrida
               





def matrix (size,hormigas,obstaculos,comida):
    
    grilla =[]
    
    for i in range(0,size):
        grilla.append([])
        for y in range(0,size):
            grilla[i].append(1)
    
    
    edit_grilla(grilla,hormigas,obstaculos,comida)
    



def edit_grilla (grilla,hormigas,obstaculos,comida):
    comidalocal = comida
    posiciones_iniciales=[]
    
    while hormigas > 0:
        x = random.randint(0,len(grilla)-1)
        y = random.randint(0,len(grilla)-1)
        
        grilla[x][y] = 0
        hormigas -= 1
        posiciones_iniciales.append([x,y])

    while obstaculos > 0:
        x = random.randint(0,len(grilla)-1)
        y = random.randint(0,len(grilla)-1)
        
        if grilla[x][y] == 1:
            grilla[x][y] = 2
            obstaculos -= 1
    while comidalocal > 0:
        x = random.randint(0,len(grilla)-1)
        y = random.randint(0,len(grilla)-1)
        
        if grilla[x][y] == 1:
            grilla[x][y] = 3
            comidalocal -= 1
    
    
        nuevas_posiciones = movedor_de_hormigas(grilla, posiciones_iniciales)
        posiciones_iniciales = nuevas_posiciones
    
    
       
    
def movedor_de_hormigas(grilla, posiciones_iniciales):
    posiciones_finales= []
    
    global comida_encontrada
    for posicion in posiciones_iniciales:
       

        movimiento_exitoso = False
        reintentos = 0
        max_reintentos = 10

        # Intentamos hasta 10 veces hallar un movimiento válido
        while not movimiento_exitoso and reintentos < max_reintentos:
            reintentos += 1
            valor_aleatorio = random.choice(["x", "y"])

            if valor_aleatorio == "x":
                direccion = random.choice(["arriba", "abajo"])
                if direccion == "abajo":
                    if (posicion[0] + 1 < len(grilla) 
                        and grilla[posicion[0] + 1][posicion[1]] != 2):

                        grilla[posicion[0]][posicion[1]] = 4
                        posicion = (posicion[0] + 1, posicion[1])

                        if grilla[posicion[0]][posicion[1]] == 3: # Chequeamos si en la casilla hay comida
                            comida_encontrada += 1
                        grilla[posicion[0]][posicion[1]] = 0
                        movimiento_exitoso = True
                        posiciones_finales.append(posicion)
                        

                elif direccion == "arriba":
                    if (posicion[0] - 1 >= 0 
                        and grilla[posicion[0] - 1][posicion[1]] != 2):
                        grilla[posicion[0]][posicion[1]] = 4
                        posicion = (posicion[0] - 1, posicion[1])

                        if grilla[posicion[0]][posicion[1]] == 3: # Chequeamos si en la casilla hay comida
                            comida_encontrada += 1
                        grilla[posicion[0]][posicion[1]] = 0
                        movimiento_exitoso = True
                        posiciones_finales.append(posicion)
            else:  # valor_aleatorio == "y"
                direccion = random.choice(["derecha", "izquierda"])
                if direccion == "derecha":
                    if (posicion[1] + 1 < len(grilla[0]) 
                        and grilla[posicion[0]][posicion[1] + 1] != 2):
                        grilla[posicion[0]][posicion[1]] = 4
                        posicion = (posicion[0], posicion[1] + 1)
                        if grilla[posicion[0]][posicion[1]] == 3: # Chequeamos si en la casilla hay comida
                            comida_encontrada += 1
                        grilla[posicion[0]][posicion[1]] = 0
                        movimiento_exitoso = True
                        posiciones_finales.append(posicion)
                elif direccion == "izquierda":
                    if (posicion[1] - 1 >= 0 
                        and grilla[posicion[0]][posicion[1] - 1] != 2):
                        grilla[posicion[0]][posicion[1]] = 4
                        posicion = (posicion[0], posicion[1] - 1)

                        if grilla[posicion[0]][posicion[1]] == 3: # Chequeamos si en la casilla hay comida
                            comida_encontrada += 1
                        grilla[posicion[0]][posicion[1]] = 0
                        movimiento_exitoso = True
                        posiciones_finales.append(posicion)
    
    printer(grilla)
    
    return posiciones_finales,grilla
    

def contador_de_area(grilla_final):

     for fila in grilla_final:
        pasos +=fila.count(4) #Cuenta las casillas recorridas por las hormigas.

def printer (grilla):

    estado_a_color = {
    0: 'red',
    1: 'green',
    2: 'black',
    3: 'white',
    4: 'yellow',} 

    for fila in grilla:
        fila_str = ""
        for celda in fila:
            color = estado_a_color[celda]
            fila_str += colored("▓▓", color)
        print(fila_str)
    return grilla
        

def simulador (simulaciones):
    

    for i in range(simulaciones):
        # Condiciones iniciales
        matrix(tamaño_grilla,hormigas,obstaculos,comida)
    

simulador(1)